{"version":3,"file":"src_app_collaterals_collaterals_module_ts.js","mappings":"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","names":["CollateralsService","http","this","orderBy","sortOrder","orphansOnly","displayName","officeId","httpParams","HttpParams","set","toString","get","params","clientId","clientCollateralId","clientCollateralData","put","delete","n","i0","factory","ctx_r12","ViewCollateralComponent","route","collateralsService","router","dialog","data","subscribe","d","open","DeleteDialogComponent","deleteContext","id","afterClosed","response","l","deleteCollateral","navigate","relativeTo","selectors","ClientCollateralResolver","parent","paramMap","collateralId","getClientCollateral","EditCollateralComponent","formBuilder","settingsService","collateralService","m","collateralDetails","snapshot","createClientCollateralForm","clientCollateralForm","group","quantity","Validators","name","value","disabled","total","totalCollateral","patchValue","updateClientCollateral","locale","language","code","ctx","routes","path","title","extract","breadcrumb","routeParamBreadcrumb","children","component","resolve","CollateralsRoutingModule","C","imports","RouterModule","CollateralsModule","CommonModule","SharedModule","DirectivesModule","PipesModule"],"sourceRoot":"webpack:///","sources":["./src/app/collaterals/collaterals.service.ts","./src/app/collaterals/view-collateral/view-collateral.component.html","./src/app/collaterals/view-collateral/view-collateral.component.ts","./src/app/collaterals/common-resolvers/client-collateral.resolver.ts","./src/app/collaterals/edit-collateral/edit-collateral.component.html","./src/app/collaterals/edit-collateral/edit-collateral.component.ts","./src/app/collaterals/collaterals-routing.module.ts","./src/app/collaterals/collaterals.module.ts"],"sourcesContent":["/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n/**\n * Collaterals service.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollateralsService {\n  /**\n   * @param {HttpClient} http Http Client to send requests.\n   */\n  constructor(private http: HttpClient) { }\n\n  getFilteredClients(orderBy: string, sortOrder: string, orphansOnly: boolean, displayName: string, officeId?: any): Observable<any> {\n    let httpParams = new HttpParams()\n      .set('displayName', displayName)\n      .set('orphansOnly', orphansOnly.toString())\n      .set('sortOrder', sortOrder)\n      .set('orderBy', orderBy);\n    if (officeId) {\n      httpParams = httpParams.set('officeId', officeId);\n    }\n    return this.http.get('/clients', { params: httpParams });\n  }\n\n  /**\n   * @returns {Observable<any>} Collaterals data\n   */\n   getClientCollateral(clientId: any, clientCollateralId: any): Observable<any> {\n    return this.http.get(`/clients/${clientId}/collaterals/${clientCollateralId}`);\n  }\n\n  /**\n   * @returns {Observable<any>} Collaterals data\n   */\n   updateClientCollateral(clientId: any, clientCollateralId: any, clientCollateralData: any): Observable<any> {\n    return this.http.put(`/clients/${clientId}/collaterals/${clientCollateralId}`, clientCollateralData);\n  }\n\n  /**\n   * @returns {Observable<any>} Delete Collaterals data\n   */\n   deleteCollateral(clientId: any, clientCollateralId: any): Observable<any> {\n    return this.http.delete(`/clients/${clientId}/collaterals/${clientCollateralId}`);\n  }\n}\n","<div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"2%\" fxLayout.lt-md=\"column\" class=\"container m-b-20\">\n    <button mat-raised-button color=\"primary\" [routerLink]=\"['edit']\" *mifosxHasPermission=\"'UPDATE_CHARGE'\">\n      <fa-icon icon=\"edit\" class=\"m-r-10\"></fa-icon>\n      Edit\n    </button>\n    <button mat-raised-button color=\"warn\" (click)=\"deleteCollateral()\" *mifosxHasPermission=\"'DELETE_CHARGE'\">\n      <fa-icon icon=\"trash\" class=\"m-r-10\"></fa-icon>\n      Delete\n    </button>\n  </div>\n\n<mat-card class=\"client-collateral-card\">\n\n    <mat-card-content class=\"content\">\\\n\n        <div class=\"tab-container mat-typography\">\n\n            <h3>Client Collateral Details</h3>\n\n            <div fxLayout=\"row\" fxLayoutGap=\"32px\" class=\"group-details-container m-b-30\">\n              <p>\n                Name: {{ clientCollateralData.name }}<br/>\n                Quantity: {{ clientCollateralData.quantity }}<br/>\n                Total Value: {{ clientCollateralData.total }}<br/>\n                Total Collateral Value: {{ clientCollateralData.totalCollateral }}<br/>\n              </p>\n\n            </div>\n\n\n            <h3>Transaction Details</h3>\n\n            <table mat-table [dataSource]=\"clientCollateralData.loanTransactionData\"\n            class=\"mat-elevation-z1 m-b-30\">\n\n            <ng-container matColumnDef=\"ID\">\n                <th mat-header-cell *matHeaderCellDef> ID </th>\n                <td mat-cell *matCellDef=\"let element\">\n                {{element.loanId}}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Last Repayment\">\n                <th mat-header-cell *matHeaderCellDef>Last Repayment</th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.lastRepayment}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Remaining Amount\">\n                <th mat-header-cell *matHeaderCellDef> Remaining Amount </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.remainingAmount}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"Last Repayment Date\">\n                <th mat-header-cell *matHeaderCellDef> Last Repayment Date </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.lastRepaymentDate | dateFormat}} </td>\n\n            </ng-container>\n\n            <!-- <tr mat-header-row *matHeaderRowDef=\"clientMemberColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: clientMemberColumns;\" [routerLink]=\"['/clients', row.id, 'loans-accounts', 'create']\" class=\"select-row\"></tr> -->\n            <tr mat-header-row *matHeaderRowDef=\"collateralColumns\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: collateralColumns;\"></tr>\n\n            </table>\n\n        </div>\n\n\n    </mat-card-content>\n\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CollateralsService } from '../collaterals.service';\nimport { MatDialog } from '@angular/material/dialog';\n\n/** Custom Components */\nimport { DeleteDialogComponent } from '../../shared/delete-dialog/delete-dialog.component';\n\n\n@Component({\n  selector: 'mifosx-view-collateral',\n  templateUrl: './view-collateral.component.html',\n  styleUrls: ['./view-collateral.component.scss']\n})\nexport class ViewCollateralComponent implements OnInit {\n\n  clientCollateralData: any;\n\n  collateralColumns: string[] = ['ID', 'Last Repayment', 'Remaining Amount', 'Last Repayment Date'];\n\n  constructor(\n    private route: ActivatedRoute,\n    private collateralsService: CollateralsService,\n    private router: Router,\n    private dialog: MatDialog\n  ) {\n    this.route.data.subscribe((data: {clientCollateralData: any}) => {\n      this.clientCollateralData = data.clientCollateralData;\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Deletes the Collateral and redirects to CLients Page.\n   */\n   deleteCollateral() {\n    const deleteCollateralDialogRef = this.dialog.open(DeleteDialogComponent, {\n      data: { deleteContext: `collateral ${this.clientCollateralData.id}` }\n    });\n    deleteCollateralDialogRef.afterClosed().subscribe((response: any) => {\n      if (response.delete) {\n        this.collateralsService.deleteCollateral(this.clientCollateralData.clientId, this.clientCollateralData.id)\n          .subscribe(() => {\n            this.router.navigate(['../../'], { relativeTo: this.route });\n          });\n      }\n    });\n  }\n\n}\n","/** Angular Imports */\nimport { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot } from '@angular/router';\n\n/** rxjs Imports */\nimport { Observable } from 'rxjs';\n\n/** Custom Services */\nimport { CollateralsService } from '../collaterals.service';\n\n/**\n * Client Collateral data resolver.\n */\n@Injectable()\nexport class ClientCollateralResolver implements Resolve<Object> {\n\n    /**\n     * @param {CollateralsService} collateralsService Collaterals service.\n     */\n    constructor(private collateralsService: CollateralsService) { }\n\n    /**\n     * Returns the Client Collateral data.\n     * @returns {Observable<any>}\n     */\n    resolve(route: ActivatedRouteSnapshot): Observable<any> {\n        const clientId = route.parent.paramMap.get('clientId');\n        const collateralId = route.parent.paramMap.get('collateralId');\n        return this.collateralsService.getClientCollateral(clientId, collateralId);\n    }\n\n}\n","<div class=\"container\">\n\n    <mat-card>\n\n        <form [formGroup]=\"clientCollateralForm\" (ngSubmit)=\"submit()\">\n\n            <mat-card-content>\n\n                <div fxLayout=\"column\">\n                    \n                    <div fxLayout=\"column\">\n\n                        <mat-form-field>\n                            <mat-label>Name</mat-label>\n                            <input matInput required formControlName=\"name\">\n                        </mat-form-field>\n\n                        <mat-form-field>\n                            <mat-label>Quantity</mat-label>\n                            <input matInput required formControlName=\"quantity\">\n                            <mat-error *ngIf=\"clientCollateralForm.controls.quantity.hasError('required')\">\n                                Quantity is <strong>required</strong>\n                            </mat-error>\n                        </mat-form-field>\n\n                        <mat-form-field>\n                            <mat-label>Total</mat-label>\n                            <input matInput required formControlName=\"total\">\n                        </mat-form-field>\n\n                        <mat-form-field>\n                            <mat-label>Total Collateral Value</mat-label>\n                            <input matInput required formControlName=\"totalCollateral\">\n                        </mat-form-field>\n\n                    </div>\n\n                </div>\n\n            </mat-card-content>\n\n            <mat-card-actions fxLayoutGap=\"5px\" fxLayout=\"row\" fsLayout.xs=\"column\" fxLayoutAlign=\"center\">\n                <button type=\"button\" mat-raised-button [routerLink]=\"['../../']\">Cancel</button>\n                <button mat-raised-button color=\"primary\" [disabled]=\"!clientCollateralForm.valid\">Submit</button> \n            </mat-card-actions>\n\n        </form>\n    \n    </mat-card>\n\n</div>","/** Angular Imports */\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n/** Custom Services */\nimport { SettingsService } from 'app/settings/settings.service';\nimport { CollateralsService } from '../collaterals.service';\n\n@Component({\n  selector: 'mifosx-edit-collateral',\n  templateUrl: './edit-collateral.component.html',\n  styleUrls: ['./edit-collateral.component.scss']\n})\nexport class EditCollateralComponent implements OnInit {\n\n\n  /** Client Collateral Form */\n  clientCollateralForm: FormGroup;\n  /** Client Collateral Options */\n  clientCollateralOptions: any;\n  /** Client Id */\n  clientId: any;\n  /** Collateral Details */\n  collateralDetails: any;\n\n  /**\n   * Retirives Collateral Form from `resolve`\n   * @param {FormBuilder} formBuilder Form bUilder.\n   * @param {ActivatedRoute} route Activated Route.\n   * @param {Router} router Router.\n   * @param {SettingsService} settingsService Settings Service\n   * @param {CollateralsService} collateralService Collateral Service\n   */\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private settingsService: SettingsService,\n    private collateralService: CollateralsService\n    ) {\n      this.route.data.subscribe((data: { clientCollateralData: any }) => {\n        this.collateralDetails = data.clientCollateralData;\n      });\n      this.clientId = this.route.parent.snapshot.params['clientId'];\n    }\n\n  ngOnInit(): void {\n    this.createClientCollateralForm();\n  }\n\n  /**\n   * Creates the Edit Clients Collaterals Form\n   */\n  createClientCollateralForm() {\n    this.clientCollateralForm = this.formBuilder.group({\n      'quantity': [ '', Validators.required ],\n      'name': [{ value: '', disabled: true }],\n      'total': [{value: '', disabled: true}],\n      'totalCollateral': [{value: '', disabled: true}],\n    });\n    this.clientCollateralForm.patchValue({\n      'name': this.collateralDetails.name,\n      'quantity': this.collateralDetails.quantity,\n      'total': this.collateralDetails.total,\n      'totalCollateral': this.collateralDetails.totalCollateral,\n    });\n  }\n\n  /**\n   * Submits Updated Client Collateral\n   */\n  submit() {\n    const collateralId = this.collateralDetails.id;\n    const quantity = this.clientCollateralForm.value.quantity;\n    const locale = this.settingsService.language.code;\n    const clientCollateralData = {\n      quantity,\n      locale\n    };\n    this.collateralService.updateClientCollateral(this.clientId, collateralId, clientCollateralData).subscribe(() => {\n      this.router.navigate(['../'], {relativeTo: this.route});\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n/** Translation Imports */\nimport { extract } from '../core/i18n/i18n.service';\n\n/** Custom Components */\nimport { ViewCollateralComponent } from './view-collateral/view-collateral.component';\n\n/** Custom Resolvers */\nimport { ClientCollateralResolver } from './common-resolvers/client-collateral.resolver';\nimport { EditCollateralComponent } from './edit-collateral/edit-collateral.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    data: { title: extract('Collateral'), breadcrumb: 'Collateral', routeParamBreadcrumb: false },\n    children: [\n      {\n        path: ':collateralId',\n        data: { title: extract('Collateral View'), routeParamBreadcrumb: 'collateralId' },\n        children: [\n          {\n            path: '',\n            component: ViewCollateralComponent,\n            resolve: {\n              clientCollateralData: ClientCollateralResolver,\n            }\n          },\n          {\n            path: 'edit',\n            data: { title: extract('edit'), routeParamBreadcrumb: 'edit' },\n            component: EditCollateralComponent,\n            resolve: {\n              clientCollateralData: ClientCollateralResolver,\n            }\n          }\n        ]\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  declarations: [],\n  providers: [\n    ClientCollateralResolver,\n  ]\n})\nexport class CollateralsRoutingModule { }\n","/** Angular Imports */\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DirectivesModule } from '../directives/directives.module';\n\n/** Custom Modules */\nimport { SharedModule } from 'app/shared/shared.module';\nimport { PipesModule } from '../pipes/pipes.module';\n\n/** Custom Components */\nimport { CollateralsRoutingModule } from './collaterals-routing.module';\nimport { ViewCollateralComponent } from './view-collateral/view-collateral.component';\nimport { EditCollateralComponent } from './edit-collateral/edit-collateral.component';\n\n\n@NgModule({\n  declarations: [\n    ViewCollateralComponent,\n    EditCollateralComponent\n  ],\n  imports: [\n    CommonModule,\n    CollateralsRoutingModule,\n    SharedModule,\n    DirectivesModule,\n    PipesModule\n  ]\n})\nexport class CollateralsModule { }\n"]}